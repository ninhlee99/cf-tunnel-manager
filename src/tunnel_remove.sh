#!/usr/bin/env bash
# --- Tunnel remove app name ---

remove_tunnel() {
  local app_name="$1"

  # 1. L·∫•y danh s√°ch tunnel hi·ªán c√≥ (Ch·ªânh s·ª≠a ƒë·ªÉ ch·ªâ l·∫•y d·ªØ li·ªáu s·∫°ch)
  local tunnels
  # L·ªánh awk ƒë√£ ƒë∆∞·ª£c s·ª≠a ƒë·ªÉ ch·ªâ l·∫•y T√äN v√† ID, sau khi b·ªè qua d√≤ng ti√™u ƒë·ªÅ g·ªëc
  tunnels=$(cloudflared tunnel list 2>/dev/null | awk 'NR>1 && $2 != "NAME" {count+=1; printf "%-3s %-25s %s\n", count".", $2, $1}')

  if [[ -z "$tunnels" ]]; then
    error "‚ö†Ô∏è Kh√¥ng c√≥ tunnel n√†o ƒë·ªÉ xo√°."
    exit 0
  fi

  # 2. X·ª≠ l√Ω l·ª±a ch·ªçn tunnel n·∫øu kh√¥ng c√≥ t√™n ƒë∆∞·ª£c cung c·∫•p
  if [[ -z "$app_name" ]]; then
    echo ""
    echo "STT  APP NAME                 TUNNEL ID"
    echo "-----------------------------------------------"

    # In ra danh s√°ch ƒë√£ ƒë∆∞·ª£c ƒë√°nh s·ªë STT
    echo "$tunnels" # | nl -w3 -s".  " | awk '{printf "%-5s %-25s %s\n", $1, $2, $3}'

    echo ""
    read -p "üî¢ Nh·∫≠p s·ªë th·ª© t·ª± tunnel mu·ªën xo√°: " choice

    if ! [[ "$choice" =~ ^[0-9]+$ ]]; then
      error "‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá."
      exit 1
    fi

    # L·∫•y T√äN tunnel (field 2) d·ª±a tr√™n s·ªë th·ª© t·ª± (choice)
    # L·ªánh 'nl' ƒë√°nh s·ªë th·ª© t·ª±, sau ƒë√≥ 'awk' ch·ªçn d√≤ng v√† l·∫•y t√™n
    app_name=$(echo "$tunnels" | awk -v n="$choice" 'NR==n {print $2}')

    if [[ -z "$app_name" ]]; then
      error "‚ùå Kh√¥ng t√¨m th·∫•y tunnel t∆∞∆°ng ·ª©ng v·ªõi s·ªë $choice."
      exit 1
    fi
  fi

  # 3. T√¨m Tunnel ID
  log "üß© ƒêang ki·ªÉm tra tunnel '$app_name'..."
  local tunnel_id
  # $tunnels ƒë√£ l√† d·ªØ li·ªáu s·∫°ch: T√äN ID. Ch·ªâ c·∫ßn t√¨m T√äN v√† l·∫•y ID (tr∆∞·ªùng $2)
  tunnel_id=$(echo "$tunnels" | awk -v name="$app_name" '$2 == name {print $3; exit}')
  if [[ -z "$tunnel_id" ]]; then
    error "‚ùå Kh√¥ng t√¨m th·∫•y tunnel '$app_name' (ID kh√¥ng x√°c ƒë·ªãnh)."
    exit 1
  fi

  log "Tunnel found: $app_name ($tunnel_id)"
  if ask_confirm "Are you sure you want to delete this tunnel and its credentials?"; then
    cloudflared tunnel delete "$app_name" || {
      error "Failed to delete tunnel."
      return 1
    }

    # Delete credential JSON if exists
    local cred_file="$HOME/.cloudflared/${tunnel_id}.json"
    if [[ -f "$cred_file" ]]; then
      rm -f "$cred_file"
      log "Deleted credentials file: $cred_file"
    fi

    local conf_file="$HOME/.cloudflared/configs/${app_name}.yml"
    if [[ -f "$conf_file" ]]; then
      rm -f "$conf_file"
      log "Deleted config file: $conf_file"
    fi

    log "‚úÖ Tunnel '$app_name' removed successfully."
  else
    log "‚ùé Deletion cancelled."
  fi
}
